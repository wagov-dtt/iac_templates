---
kind: Deployment
apiVersion: apps/v1
metadata: {name: karpenter-headroom, namespace: kube-system}
spec:
  replicas: 3
  selector: {matchLabels: {app: karpenter-headroom}}
  template:
    metadata: {labels: {app: karpenter-headroom}}
    spec:
      containers:
        - name: pause
          image: k8s.gcr.io/pause
          resources: {requests: {cpu: 10m, memory: 64Mi}}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - {key: app, operator: In, values: [karpenter-headroom]}
              topologyKey: kubernetes.io/hostname
---
apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata: {name: localstorage}
spec:
  weight: 10
  template:
    spec:
      nodeClassRef: {name: default}
      requirements:
        - {key: karpenter.sh/capacity-type, operator: In, values: [spot, on-demand]}
        - {key: kubernetes.io/arch, operator: In, values: [amd64]}
        - {key: kubernetes.io/os, operator: In, values: [linux]}
        - {key: karpenter.azure.com/sku-name, operator: In, values: [Standard_L8as_v3]}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-disk-setup
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: node-disk-setup
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: node-disk-setup
      namespace: kube-system
    spec:
      containers:
        - name: pause
          image: k8s.gcr.io/pause
      hostNetwork: true
      hostPID: true
      initContainers:
        - name: init-node
          image: mcr.microsoft.com/cbl-mariner/base/core:1.0
          securityContext:
            privileged: true
          command:
            - nsenter
            - --target
            - "1"
            - --mount
            - --uts
            - --ipc
            - --net
            - --pid
            - --
            - sh
            - '-c'
            - |
              mkfs.ext4 /dev/nvme0n1
              mkdir -p /var/lib/longhorn
              mount /dev/nvme0n1 /var/lib/longhorn
              mount | grep nvme0n1
              kubectl --kubeconfig=/var/lib/kubelet/kubeconfig label node ${HOSTNAME,,} node.longhorn.io/create-default-disk=true
      nodeSelector:
        karpenter.sh/nodepool: localstorage
